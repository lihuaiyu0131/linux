apiVersion: v1
kind: Namespace
metadata:
  name: tomcat-ns
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv03
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: tomcat-pv
  nfs:
    path: /data/tomcat
    server: 10.0.0.5
---
apiVersion: v1
kind: Secret
metadata:
  name: harbor-secret
  namespace: tomcat-ns
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSIxMC4wLjAuMTE6ODg4OCI6IHsKCQkJImF1dGgiOiAiWVdSdGFXNDZNVEl6IgoJCX0KCX0KfQ==
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: tomcat-ns
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: tomcat-pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: tomcat-ns
  name: mysql-dp
  labels:
    app: mysql-dp
spec:
  replicas: 1
  selector:
    matchLabels:
      run: mysql
  template:
    metadata:
      labels:
        run: mysql
    spec:
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-pvc
      containers:
      - name: mysql
#        image: 10.0.0.11:8888/images/mysql:8.0.26
        image: mysql:5.7
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "123456"
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        ports:
        - containerPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: tomcat-ns
  name: tomcat-dp
  labels:
    app: tomcat-dp
spec:
  replicas: 1
  selector:
    matchLabels:
      run: tomcat
  template:
    metadata:
      labels:
        run: tomcat
    spec:
      containers:
      - name: tomcat
        image: 10.0.0.11:8888/images/tomcat-app:v1
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_SERVICE_HOST
          value: 'mysql-svc'
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  namespace: tomcat-ns
  name: tomcat-svc
spec:
  selector:
    run: tomcat
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  namespace: tomcat-ns
  name: mysql-svc
spec:
  selector:
    run: mysql
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: tomcat-ns
  name: tomcat
spec:
  rules:
  - host: mytomcat0131.k8s.com
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: tomcat-svc
            port:
              number: 8080


